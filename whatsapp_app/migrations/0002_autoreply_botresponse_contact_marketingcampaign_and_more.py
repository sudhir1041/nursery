# Generated by Django 5.1.7 on 2025-04-29 10:48

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('whatsapp_app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AutoReply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_text', models.TextField(default="Thank you for contacting our nursery! We're currently closed or assisting other customers. We'll get back to you as soon as possible during business hours.", help_text='The message sent automatically when no staff responds quickly (logic defined elsewhere).')),
                ('is_active', models.BooleanField(default=False, help_text='Enable or disable the auto-reply feature.')),
            ],
            options={
                'verbose_name': 'Auto Reply Setting',
                'verbose_name_plural': 'Auto Reply Settings',
            },
        ),
        migrations.CreateModel(
            name='BotResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trigger_phrase', models.CharField(help_text='Keyword or phrase that triggers this response (case-insensitive exact match).', max_length=255, unique=True)),
                ('response_text', models.TextField(help_text='The message text to send back.')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this bot response is currently enabled.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Bot Response',
                'verbose_name_plural': 'Bot Responses',
                'ordering': ['trigger_phrase'],
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('wa_id', models.CharField(help_text='WhatsApp ID (Phone Number including country code, e.g., 919876543210).', max_length=50, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(blank=True, help_text='Profile name obtained from WhatsApp (can change).', max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'WhatsApp Contact',
                'verbose_name_plural': 'WhatsApp Contacts',
            },
        ),
        migrations.CreateModel(
            name='MarketingCampaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Internal name for this campaign (e.g., 'Spring Sale 2025').", max_length=150)),
                ('scheduled_time', models.DateTimeField(blank=True, db_index=True, help_text='If set, the campaign will start sending at this time (uses Celery Beat or scheduler).', null=True)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('SCHEDULED', 'Scheduled'), ('SENDING', 'Sending'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('CANCELLED', 'Cancelled')], db_index=True, default='DRAFT', help_text='Current status of the campaign.', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, help_text='Timestamp when sending actually began.', null=True)),
                ('completed_at', models.DateTimeField(blank=True, help_text='Timestamp when all messages were processed.', null=True)),
            ],
            options={
                'verbose_name': 'Marketing Campaign',
                'verbose_name_plural': 'Marketing Campaigns',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WhatsAppSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_name', models.CharField(default='NurseryProjectDefault', help_text='A unique name for these settings (e.g., main account).', max_length=100, unique=True)),
                ('whatsapp_token', models.CharField(help_text='Your WhatsApp Cloud API Access Token (Permanent or Temporary).', max_length=500)),
                ('phone_number_id', models.CharField(help_text='The Phone Number ID from your WhatsApp App settings in Meta Developer Portal.', max_length=100)),
                ('whatsapp_business_account_id', models.CharField(help_text='Your WhatsApp Business Account (WABA) ID.', max_length=100)),
                ('app_id', models.CharField(blank=True, help_text='Your Facebook App ID (optional, used for some integrations).', max_length=100, null=True)),
                ('webhook_verify_token', models.CharField(default=uuid.uuid4, help_text='Auto-generated string used to verify webhook setup with Meta.', max_length=100)),
                ('webhook_url', models.URLField(blank=True, help_text='The public URL where WhatsApp will send incoming messages (e.g., https://yournursery.com/whatsapp/webhook/).', max_length=255, null=True)),
                ('is_live_mode', models.BooleanField(default=False, help_text='Check this box if these credentials are for the live production environment.')),
                ('last_validated', models.DateTimeField(blank=True, help_text='Timestamp when these credentials were last known to be working.', null=True)),
            ],
            options={
                'verbose_name': 'WhatsApp Setting',
                'verbose_name_plural': 'WhatsApp Settings',
            },
        ),
        migrations.RemoveField(
            model_name='whatsappmessage',
            name='contact',
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('message_id', models.CharField(help_text='WhatsApp Message ID (wamid) provided by the API.', max_length=100, primary_key=True, serialize=False, unique=True)),
                ('direction', models.CharField(choices=[('IN', 'Incoming'), ('OUT', 'Outgoing')], help_text='Was the message sent from or received by the nursery?', max_length=3)),
                ('status', models.CharField(choices=[('PENDING', 'Pending Send'), ('SENT', 'Sent to WhatsApp'), ('DELIVERED', 'Delivered'), ('READ', 'Read'), ('FAILED', 'Failed'), ('RECEIVED', 'Received (Incoming)')], db_index=True, default='RECEIVED', help_text='Delivery status of the message (updated via webhooks for outgoing).', max_length=10)),
                ('message_type', models.CharField(default='text', help_text='Type of message (e.g., text, image, template, location).', max_length=20)),
                ('text_content', models.TextField(blank=True, help_text='Text content of the message (or description for non-text types).', null=True)),
                ('media_url', models.URLField(blank=True, help_text='URL of the media file (if applicable, might need separate download).', max_length=500, null=True)),
                ('template_name', models.CharField(blank=True, help_text='Name of the template used (if applicable).', max_length=100, null=True)),
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now, help_text='Timestamp when the message was processed/sent by this system.')),
                ('whatsapp_timestamp', models.DateTimeField(blank=True, help_text='Original timestamp provided by WhatsApp (UTC).', null=True)),
                ('error_message', models.TextField(blank=True, help_text='Details if the message failed to send or process.', null=True)),
                ('contact', models.ForeignKey(help_text='The contact associated with this message.', on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='whatsapp_app.contact')),
            ],
            options={
                'verbose_name': 'WhatsApp Message',
                'verbose_name_plural': 'WhatsApp Messages',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='CampaignContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('template_variables', models.JSONField(blank=True, help_text='Variables for the template, e.g., {"1": "Customer Name", "2": "Discount Code"}', null=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending Send'), ('SENT', 'Sent to WhatsApp'), ('DELIVERED', 'Delivered'), ('READ', 'Read'), ('FAILED', 'Failed'), ('RECEIVED', 'Received (Incoming)')], db_index=True, default='PENDING', help_text='Delivery status of the message sent to this contact for this campaign.', max_length=10)),
                ('message_id', models.CharField(blank=True, db_index=True, help_text='WhatsApp Message ID (wamid) of the sent message.', max_length=100, null=True)),
                ('sent_time', models.DateTimeField(blank=True, help_text='Timestamp when the message was sent via API.', null=True)),
                ('error_message', models.TextField(blank=True, help_text='Error details if sending failed for this contact.', null=True)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='marketing_messages', to='whatsapp_app.contact')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipients', to='whatsapp_app.marketingcampaign')),
            ],
            options={
                'verbose_name': 'Campaign Recipient',
                'verbose_name_plural': 'Campaign Recipients',
                'ordering': ['campaign', 'contact__wa_id'],
                'unique_together': {('campaign', 'contact')},
            },
        ),
        migrations.CreateModel(
            name='MarketingTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Exact template name from WhatsApp Business Manager (case-sensitive).', max_length=100)),
                ('language', models.CharField(default='en', help_text="Language code of the template (e.g., 'en', 'en_US', 'hi').", max_length=10)),
                ('category', models.CharField(help_text='Category assigned by Meta (e.g., MARKETING, UTILITY, AUTHENTICATION).', max_length=50)),
                ('components', models.JSONField(help_text='Structure of the template (header, body, footer, buttons) obtained from API sync.')),
                ('last_synced', models.DateTimeField(auto_now=True, help_text='When this template information was last updated from the API.')),
            ],
            options={
                'verbose_name': 'WhatsApp Template',
                'verbose_name_plural': 'WhatsApp Templates',
                'ordering': ['name', 'language'],
                'unique_together': {('name', 'language')},
            },
        ),
        migrations.AddField(
            model_name='marketingcampaign',
            name='template',
            field=models.ForeignKey(help_text='The approved WhatsApp template to use for this campaign.', on_delete=django.db.models.deletion.PROTECT, related_name='campaigns', to='whatsapp_app.marketingtemplate'),
        ),
        migrations.DeleteModel(
            name='ScheduledWhatsAppMessage',
        ),
        migrations.DeleteModel(
            name='WhatsAppContact',
        ),
        migrations.DeleteModel(
            name='WhatsAppMessage',
        ),
    ]
