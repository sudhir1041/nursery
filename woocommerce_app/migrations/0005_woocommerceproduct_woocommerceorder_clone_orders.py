# Generated by Django 5.2 on 2025-05-14 05:47

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('woocommerce_app', '0004_woocommerceorder_shipment_status'),
    ]

    operations = [
        migrations.CreateModel(
            name='WooCommerceProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('woo_id', models.PositiveIntegerField(db_index=True, help_text='WooCommerce Product ID', unique=True)),
                ('name', models.CharField(blank=True, help_text='Product name', max_length=255, null=True)),
                ('slug', models.SlugField(blank=True, help_text='Product slug', max_length=255, null=True)),
                ('sku', models.CharField(blank=True, db_index=True, help_text='Stock Keeping Unit', max_length=100, null=True)),
                ('permalink', models.URLField(blank=True, help_text='Product URL on WooCommerce', null=True)),
                ('type', models.CharField(blank=True, help_text='Product type (e.g., simple, variable)', max_length=50, null=True)),
                ('status', models.CharField(blank=True, db_index=True, help_text='Product status (e.g., publish, draft)', max_length=50, null=True)),
                ('featured', models.BooleanField(default=False, help_text='Is the product featured?')),
                ('catalog_visibility', models.CharField(blank=True, help_text='Catalog visibility setting', max_length=50, null=True)),
                ('description', models.TextField(blank=True, help_text='Full product description', null=True)),
                ('short_description', models.TextField(blank=True, help_text='Short product description', null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, help_text='Product price', max_digits=10, null=True)),
                ('regular_price', models.DecimalField(blank=True, decimal_places=2, help_text='Regular price', max_digits=10, null=True)),
                ('sale_price', models.DecimalField(blank=True, decimal_places=2, help_text='Sale price', max_digits=10, null=True)),
                ('on_sale', models.BooleanField(default=False, help_text='Is the product on sale?')),
                ('total_sales', models.PositiveIntegerField(default=0, help_text='Number of total sales')),
                ('weight', models.CharField(blank=True, help_text='Product weight', max_length=50, null=True)),
                ('dimensions', models.JSONField(blank=True, help_text='Product dimensions (length, width, height)', null=True)),
                ('stock_status', models.CharField(blank=True, db_index=True, help_text='Stock status (e.g., instock, outofstock)', max_length=50, null=True)),
                ('stock_quantity', models.IntegerField(blank=True, help_text='Available stock quantity', null=True)),
                ('backorders', models.CharField(blank=True, help_text='Backorders allowed?', max_length=50, null=True)),
                ('low_stock_amount', models.IntegerField(blank=True, help_text='Low stock threshold', null=True)),
                ('reviews_allowed', models.BooleanField(default=True, help_text='Are reviews allowed?')),
                ('average_rating', models.DecimalField(blank=True, decimal_places=2, help_text='Average product rating', max_digits=3, null=True)),
                ('rating_count', models.PositiveIntegerField(default=0, help_text='Number of ratings')),
                ('parent_id', models.PositiveIntegerField(blank=True, db_index=True, help_text='ID of the parent product (for variations)', null=True)),
                ('categories_json', models.JSONField(blank=True, help_text='Raw JSON data for categories', null=True)),
                ('tags_json', models.JSONField(blank=True, help_text='Raw JSON data for tags', null=True)),
                ('images_json', models.JSONField(blank=True, help_text='Raw JSON data for product images', null=True)),
                ('attributes_json', models.JSONField(blank=True, help_text='Raw JSON data for product attributes', null=True)),
                ('variations_json', models.JSONField(blank=True, help_text='Raw JSON data for product variations', null=True)),
                ('menu_order', models.IntegerField(default=0, help_text='Menu order position')),
                ('meta_data_json', models.JSONField(blank=True, help_text='Raw JSON data for meta data', null=True)),
                ('raw_data', models.JSONField(blank=True, help_text='Full webhook payload or API response', null=True)),
                ('django_date_created', models.DateTimeField(auto_now_add=True)),
                ('django_date_modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'WooCommerce Product',
                'verbose_name_plural': 'WooCommerce Products',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='woocommerceorder',
            name='clone_orders',
            field=models.JSONField(blank=True, default=list, help_text="Store clone orders as a JSON list, e.g., [{'order_id': 'XXX', 'platform': 'WooCommerce'}, ...]"),
        ),
    ]
